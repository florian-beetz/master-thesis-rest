version: '3'

volumes:
  keycloak_db:
  influxdb-storage:
  chronograf-storage:
  grafana-storage:

services:
  traefik:
    image: traefik
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--metrics=true"
      - "--metrics.influxdb=true"
      - "--metrics.influxdb.address=influxdb:8086"
      - "--metrics.influxdb.protocol=http"
      - "--metrics.influxdb.username=${MONITORING_USERNAME}"
      - "--metrics.influxdb.password=${MONITORING_PASSWORD}"
      - "--metrics.influxdb.database=db0"

    ports:
      - "8080:80"
      - "8090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  keycloak:
    image: quay.io/keycloak/keycloak:11.0.0
    environment:
    - KEYCLOAK_USER=${KEYCLOAK_USER}
    - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gateway.rule=PathPrefix(`/auth/`, `/auth`)"
      - "traefik.http.routers.gateway.entrypoints=web"
    volumes:
      - keycloak_db:/opt/jboss/keyclaok/standalone/data

  inventory:
    build: ./inventory-service
    image: registry.florianbeetz.de/ma-rest/inventory
    ports:
    - 9010:9010
    environment:
      - INVENTORY_DB_HOST=inventory_db
      - INVENTORY_DB_PORT=5432
      - INVENTORY_DB_DATABASE=postgres
      - INVENTORY_DB_USER=postgres
      - INVENTORY_DB_PASSWORD=${INVENTORY_DB_PASSWORD}
      - INVENTORY_AUTH_URL=${ROOT_URL}/auth
      - INVENTORY_AUTH_CLIENT=${INVENTORY_CLIENT_ID}
      - INVENTORY_AUTH_SECRET=${INVENTORY_CLIENT_SECRET}
    depends_on:
      - inventory_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory.rule=PathPrefix(`/inventory/`)"
      - "traefik.http.routers.inventory.entrypoints=web"


  inventory_db:
    image: postgres
    ports:
    - 5434:5432
    environment:
      - POSTGRES_PASSWORD=${INVENTORY_DB_PASSWORD}
      - "PGOPTIONS=-c track_io_timing=on"
    healthcheck: &pg_health
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  orders:
    build: ./order-service
    image: registry.florianbeetz.de/ma-rest/order
    environment:
      - ORDER_DB_HOST=order_db
      - ORDER_DB_PORT=5432
      - ORDER_DB_DATABASE=postgres
      - ORDER_DB_USER=postgres
      - ORDER_DB_PASSWORD=${ORDER_DB_PASSWORD}
      - ORDER_AUTH_URL=${ROOT_URL}/auth
      - ORDER_AUTH_CLIENT=${ORDER_CLIENT_ID}
      - ORDER_AUTH_SECRET=${ORDER_CLIENT_SECRET}
    depends_on:
      - order_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order.rule=PathPrefix(`/order/`)"
      - "traefik.http.routers.order.entrypoints=web"

  order_db:
    image: postgres
    ports:
    - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${ORDER_DB_PASSWORD}
      - "PGOPTIONS=-c track_io_timing=on"
    healthcheck: *pg_health

  shipping:
    build:
      ./shipping-service
    image: registry.florianbeetz.de/ma-rest/shipping
    environment:
      - SHIPPING_DB_HOST=shipping_db
      - SHIPPING_DB_PORT=5432
      - SHIPPING_DB_DATABASE=postgres
      - SHIPPING_DB_USER=postgres
      - SHIPPING_DB_PASSWORD=${SHIPPING_DB_PASSWORD}
      - SHIPPING_AUTH_URL=${ROOT_URL}/auth
      - SHIPPING_AUTH_CLIENT=${SHIPPING_CLIENT_ID}
      - SHIPPING_AUTH_SECRET=${SHIPPING_CLIENT_SECRET}
    depends_on:
      - shipping_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shipping.rule=PathPrefix(`/shipping/`)"
      - "traefik.http.routers.shipping.entrypoints=web"

  shipping_db:
    image: postgres
    ports:
      - 5433:5432
    environment:
      - POSTGRES_PASSWORD=${SHIPPING_DB_PASSWORD}
      - "PGOPTIONS=-c track_io_timing=on"
    healthcheck: *pg_health

  payment:
    build:
      ./payment-service
    image: registry.florianbeetz.de/ma-rest/payment
    environment:
      - PAYMENT_DB_HOST=payment_db
      - PAYMENT_DB_PORT=5432
      - PAYMENT_DB_DATABASE=postgres
      - PAYMENT_DB_USER=postgres
      - PAYMENT_DB_PASSWORD=${PAYMENT_DB_PASSWORD}
      - PAYMENT_AUTH_URL=${ROOT_URL}/auth
      - PAYMENT_AUTH_CLIENT=${PAYMENT_CLIENT_ID}
      - PAYMENT_AUTH_SECRET=${PAYMENT_CLIENT_SECRET}
    depends_on:
      - payment_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payment.rule=PathPrefix(`/payment/`)"
      - "traefik.http.routers.payment.entrypoints=web"

  payment_db:
    image: postgres
    ports:
      - 5435:5432
    environment:
      - POSTGRES_PASSWORD=${PAYMENT_DB_PASSWORD}
      - "PGOPTIONS=-c track_io_timing=on"
    healthcheck: *pg_health

  influxdb:
    image: influxdb:latest
    ports:
      - 8086:8086
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=${MONITORING_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${MONITORING_PASSWORD}
  chronograf:
    image: chronograf:latest
    ports:
      - '127.0.0.1:8888:8888'
    volumes:
      - chronograf-storage:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${MONITORING_USERNAME}
      - INFLUXDB_PASSWORD=${MONITORING_PASSWORD}
  grafana:
    image: grafana/grafana:latest
    ports:
    - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${MONITORING_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${MONITORING_PASSWORD}
  telegraf:
    image: telegraf:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/telegraf.conf:/etc/telegraf/telegraf.conf:ro